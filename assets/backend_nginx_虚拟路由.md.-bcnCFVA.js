import{_ as a,c as n,o as e,ah as l}from"./chunks/framework.BrJYEL96.js";const u=JSON.parse('{"title":"虚拟路由","description":"","frontmatter":{},"headers":[],"relativePath":"backend/nginx/虚拟路由.md","filePath":"backend/nginx/虚拟路由.md","lastUpdated":1743348162000}'),p={name:"backend/nginx/虚拟路由.md"};function t(r,s,c,o,i,d){return e(),n("div",null,s[0]||(s[0]=[l(`<h1 id="虚拟路由" tabindex="-1">虚拟路由 <a class="header-anchor" href="#虚拟路由" aria-label="Permalink to &quot;虚拟路由&quot;">​</a></h1><h2 id="vrrp" tabindex="-1">VRRP <a class="header-anchor" href="#vrrp" aria-label="Permalink to &quot;VRRP&quot;">​</a></h2><p><strong>实验</strong></p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 节点 192.168.184.30 Master</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 节点 192.168.184.40 Backup</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># VIP 192.168.184.50</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">yum</span><span style="color:#98C379;"> install</span><span style="color:#D19A66;"> -y</span><span style="color:#98C379;"> keepalived</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 查看安装包</span></span>
<span class="line"><span style="color:#61AFEF;">rpm</span><span style="color:#D19A66;"> -ql</span><span style="color:#98C379;"> keepalived</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 编辑配置文件</span></span>
<span class="line"><span style="color:#61AFEF;">vim</span><span style="color:#98C379;"> /etc/keepalived/keepalived.conf</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p></p><p>抢占式和非抢占式只能是BACKUP节点之间，MASTER节点故障恢复后还是会抢占。</p></div>`,5)]))}const m=a(p,[["render",t]]);export{u as __pageData,m as default};
