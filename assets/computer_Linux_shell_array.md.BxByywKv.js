import{_ as s,c as n,o as l,ah as e}from"./chunks/framework.BrJYEL96.js";const y=JSON.parse('{"title":"数组","description":"","frontmatter":{},"headers":[],"relativePath":"computer/Linux/shell/array.md","filePath":"computer/Linux/shell/array.md","lastUpdated":1754837914000}'),o={name:"computer/Linux/shell/array.md"};function r(t,a,p,c,i,d){return l(),n("div",null,a[0]||(a[0]=[e(`<h1 id="数组" tabindex="-1">数组 <a class="header-anchor" href="#数组" aria-label="Permalink to &quot;数组&quot;">​</a></h1><div class="warning custom-block"><p class="custom-block-title">警告</p><p>shell中数组也是<code>()</code>包裹，元素以空格分隔</p></div><h2 id="数组声明" tabindex="-1">数组声明 <a class="header-anchor" href="#数组声明" aria-label="Permalink to &quot;数组声明&quot;">​</a></h2><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#E06C75;">array</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;jones&quot;</span><span style="color:#98C379;"> &quot;mike&quot;</span><span style="color:#98C379;"> &quot;kobe&quot;</span><span style="color:#98C379;"> &quot;jordan&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;"># 以空格间隔每个元素</span></span>
<span class="line"></span>
<span class="line"><span style="color:#56B6C2;">echo</span><span style="color:#ABB2BF;"> \${</span><span style="color:#E06C75;">array</span><span style="color:#ABB2BF;">[@]} </span><span style="color:#7F848E;font-style:italic;"># all array、</span></span>
<span class="line"></span>
<span class="line"><span style="color:#56B6C2;">echo</span><span style="color:#ABB2BF;"> \${</span><span style="color:#E06C75;">array</span><span style="color:#ABB2BF;">[0]} </span><span style="color:#7F848E;font-style:italic;"># first elament</span></span>
<span class="line"></span>
<span class="line"><span style="color:#56B6C2;">echo</span><span style="color:#ABB2BF;"> \${#</span><span style="color:#E06C75;">array</span><span style="color:#ABB2BF;">[@]} </span><span style="color:#7F848E;font-style:italic;">#get array length</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="" tabindex="-1"><a class="header-anchor" href="#" aria-label="Permalink to &quot;&quot;">​</a></h2>`,5)]))}const b=s(o,[["render",r]]);export{y as __pageData,b as default};
