import{_ as n,c as a,o as e,ah as t}from"./chunks/framework.BrJYEL96.js";const b=JSON.parse('{"title":"字符串处理","description":"","frontmatter":{},"headers":[],"relativePath":"computer/Linux/shell/string.md","filePath":"computer/Linux/shell/string.md","lastUpdated":1754837914000}'),l={name:"computer/Linux/shell/string.md"};function o(p,s,r,c,d,i){return e(),a("div",null,s[0]||(s[0]=[t(`<h1 id="字符串处理" tabindex="-1">字符串处理 <a class="header-anchor" href="#字符串处理" aria-label="Permalink to &quot;字符串处理&quot;">​</a></h1><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 全局使用示例</span></span>
<span class="line"><span style="color:#E06C75;">v</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;I love you, Do you love me&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="warning custom-block"><p class="custom-block-title">警告</p><p><span style="color:red;">expr 索引从1开始, <code>$</code>从0开始索引</span></p></div><h2 id="变量替换" tabindex="-1">变量替换 <a class="header-anchor" href="#变量替换" aria-label="Permalink to &quot;变量替换&quot;">​</a></h2><p><img src="https://raw.gitcode.com/loveagri/pic/raw/main/2024-07-16/14/18200_image-20230115204034707_compress_20230115204049.png" alt="image-20230115204034707" loading="lazy"></p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#E06C75;">v</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;I love you, Do you love me&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><table tabindex="0"><thead><tr><th>语法</th><th>说明</th><th>例子</th><th>输出</th></tr></thead><tbody><tr><td><code>\${var#rule}</code></td><td>Delete the <strong>shortest</strong> from the <strong>beginning</strong> of variable</td><td><code>var=\${v#*ov}</code></td><td>e you, Do you love me</td></tr><tr><td><code>\${var##rule}</code></td><td>Delete the <strong>longest</strong> from the <strong>beginning</strong> of variable</td><td><code>var=\${v##*ov}</code></td><td>e me</td></tr><tr><td><code>\${var%rule}</code></td><td>Delete the <strong>shortest</strong> from the <strong>end</strong> of variable</td><td><code>var=\${v%ov*}</code></td><td>I love you, Do you l</td></tr><tr><td><code>\${var%%rule}</code></td><td>Delete the <strong>longest</strong> from the <strong>end</strong> of variable</td><td><code>var=\${v%%ov*}</code></td><td>I l</td></tr><tr><td><code>\${var/old/new}</code></td><td>Replace the <strong>first</strong> match</td><td><code>var=\${v/love/hate}</code></td><td>I hate you, Do you love me</td></tr><tr><td><code>\${var/old//new}</code></td><td>Replace the <strong>all</strong> match</td><td><code>var=\${v//love/hate}</code></td><td>I hate you, Do you hate me</td></tr></tbody></table><h2 id="变量测试" tabindex="-1">变量测试 <a class="header-anchor" href="#变量测试" aria-label="Permalink to &quot;变量测试&quot;">​</a></h2><p><img src="https://raw.gitcode.com/loveagri/pic/raw/main/2023-01-15/20/image-20230115204926647_20230115204926.png" alt="image-20230115204926647" loading="lazy"></p><h2 id="字符串计算长度" tabindex="-1">字符串计算长度 <a class="header-anchor" href="#字符串计算长度" aria-label="Permalink to &quot;字符串计算长度&quot;">​</a></h2><table tabindex="0"><thead><tr><th></th><th>语法</th><th>说明</th><th>示例</th><th>输出</th></tr></thead><tbody><tr><td>1</td><td><code>\${#v}</code></td><td>the length, index start from 0</td><td><code>len=\${#v}</code></td><td>26</td></tr><tr><td>2</td><td><code>\`expr length &quot;$v&quot; \`</code></td><td>If there are Spaces in the string, double quotation marks must be added, just used in Linux, <strong>macOS doesn&#39;t work</strong>, index start from 1</td><td><code>len=\`expr length &quot;$v&quot;\` </code></td><td>26</td></tr></tbody></table><h2 id="获取字符串位置" tabindex="-1">获取字符串位置 <a class="header-anchor" href="#获取字符串位置" aria-label="Permalink to &quot;获取字符串位置&quot;">​</a></h2><table tabindex="0"><thead><tr><th></th><th>语法</th><th>说明</th><th>示例</th><th>输出</th></tr></thead><tbody><tr><td>1</td><td><code> \`expr index $var substring\`</code></td><td>获取第一个<code>字符</code>位置，拆分字符串为字符，然后匹配最先找到的字符，如例子中<code>o</code>是首先找到的, 索引从1开始</td><td><code>ind=\`expr index &quot;$v&quot; you\` </code></td><td>4</td></tr><tr><td>2</td><td><code>\`expr match $var substring\`</code></td><td>获取从头匹配的子串的长度, <code>ind=\`expr match &quot;$v&quot; you\` </code>结果为0</td><td><code> ind=\`expr match &quot;$v&quot; I.*\`</code></td><td>26</td></tr></tbody></table><h2 id="抽取子串" tabindex="-1">抽取子串 <a class="header-anchor" href="#抽取子串" aria-label="Permalink to &quot;抽取子串&quot;">​</a></h2><p><img src="https://raw.gitcode.com/loveagri/pic/raw/main/2023-01-16/14/image-20230116140647946_20230116140648.png" alt="image-20230116140647946" loading="lazy"></p><table tabindex="0"><thead><tr><th></th><th>Syntax</th><th>Description</th><th>示例</th><th>输出</th></tr></thead><tbody><tr><td>1</td><td><code>\${var: postion}</code></td><td>start from the position, <strong>index start from 0</strong></td><td><code>var=\${v: 10}</code></td><td>, Do you love me</td></tr><tr><td>2</td><td><code>\${var: postion: length}</code></td><td>start from position, the length of match is length</td><td><code>var=\${v:10:6}</code></td><td>, Do y</td></tr><tr><td>3</td><td><code>\${var: -postion}</code></td><td>From right side, there is a <span style="color:red;">white-space</span> between : and -</td><td><code>var=\${v: -5}</code></td><td>ve me</td></tr><tr><td>4</td><td><code>\${var: -postion:length}</code></td><td></td><td><code>var=\${v: -5:4}</code></td><td>ve m</td></tr><tr><td>5</td><td><code>\`expr substr &quot;$var&quot; position length\`</code></td><td>start from position, the length of match is length with <span style="color:red;">index from 1</span></td><td><code>str=\`expr substr &quot;$v&quot; 10 6\`</code></td><td>u, Do</td></tr></tbody></table><p>练习：</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="color:#E06C75;">string</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;Bigdata process framework is Hadoop, Hadoop is an open source project&quot;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> print_tips</span></span>
<span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#56B6C2;">    echo</span><span style="color:#98C379;"> &quot;*********************************************&quot;</span></span>
<span class="line"><span style="color:#56B6C2;">    echo</span><span style="color:#98C379;"> &quot;(1) print the length of string&quot;</span></span>
<span class="line"><span style="color:#56B6C2;">    echo</span><span style="color:#98C379;"> &quot;(2) delete all Hadoop&quot;</span></span>
<span class="line"><span style="color:#56B6C2;">    echo</span><span style="color:#98C379;"> &quot;(3) replace the first Hadoop with Mapreduce&quot;</span></span>
<span class="line"><span style="color:#56B6C2;">    echo</span><span style="color:#98C379;"> &quot;(4) replace all the Hadoop with Mapreduce&quot;</span></span>
<span class="line"><span style="color:#56B6C2;">    echo</span><span style="color:#98C379;"> &quot;*********************************************&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> len_of_string</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#56B6C2;">    echo</span><span style="color:#98C379;"> &quot;\${</span><span style="color:#ABB2BF;">#</span><span style="color:#E06C75;">string</span><span style="color:#98C379;">}&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> del_hadoop</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#56B6C2;">    echo</span><span style="color:#98C379;"> &quot;\${</span><span style="color:#E06C75;">string</span><span style="color:#ABB2BF;">//</span><span style="color:#E06C75;">Hadoop</span><span style="color:#ABB2BF;">/</span><span style="color:#98C379;">}&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> rep_hadoop_mapreduce_first</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#56B6C2;">    echo</span><span style="color:#98C379;"> &quot;\${</span><span style="color:#E06C75;">string</span><span style="color:#ABB2BF;">/</span><span style="color:#E06C75;">Hadoop</span><span style="color:#ABB2BF;">/</span><span style="color:#E06C75;">Mapreduce</span><span style="color:#98C379;">}&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> rep_hadoop_mapreduce_all</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#56B6C2;">    echo</span><span style="color:#98C379;"> &quot;\${</span><span style="color:#E06C75;">string</span><span style="color:#ABB2BF;">//</span><span style="color:#E06C75;">Hadoop</span><span style="color:#ABB2BF;">/</span><span style="color:#E06C75;">Mapreduce</span><span style="color:#98C379;">}&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">while</span><span style="color:#56B6C2;"> true</span></span>
<span class="line"><span style="color:#C678DD;"> do</span></span>
<span class="line"><span style="color:#56B6C2;">    echo</span><span style="color:#98C379;"> &quot;【 string=</span><span style="color:#E06C75;">$string</span><span style="color:#98C379;"> 】&quot;</span></span>
<span class="line"><span style="color:#56B6C2;">    echo</span></span>
<span class="line"><span style="color:#61AFEF;">    print_tips</span></span>
<span class="line"><span style="color:#56B6C2;">    read</span><span style="color:#D19A66;"> -p</span><span style="color:#98C379;"> &quot;Pls input your choice(1|2|3|4|Q|q):&quot;</span><span style="color:#98C379;"> choice</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">    case</span><span style="color:#E06C75;"> $choice</span><span style="color:#C678DD;"> in</span></span>
<span class="line"><span style="color:#E06C75;">          1</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#61AFEF;">            len_of_string</span></span>
<span class="line"><span style="color:#ABB2BF;">            ;;</span></span>
<span class="line"><span style="color:#E06C75;">          2</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#61AFEF;">            del_hadoop</span></span>
<span class="line"><span style="color:#ABB2BF;">            ;;</span></span>
<span class="line"><span style="color:#E06C75;">          3</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#61AFEF;">            rep_hadoop_mapreduce_first</span></span>
<span class="line"><span style="color:#ABB2BF;">            ;;</span></span>
<span class="line"><span style="color:#E06C75;">          4</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#61AFEF;">            rep_hadoop_mapreduce_all</span></span>
<span class="line"><span style="color:#ABB2BF;">            ;;</span></span>
<span class="line"><span style="color:#E06C75;">          q</span><span style="color:#ABB2BF;">|</span><span style="color:#E06C75;">Q</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#56B6C2;">            exit</span></span>
<span class="line"><span style="color:#ABB2BF;">            ;;</span></span>
<span class="line"><span style="color:#ABB2BF;">          *)</span></span>
<span class="line"><span style="color:#56B6C2;">            echo</span><span style="color:#98C379;"> &quot;Error, input only in (1|2|3|4|Q|q)&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">            ;;</span></span>
<span class="line"><span style="color:#C678DD;">    esac</span></span>
<span class="line"><span style="color:#C678DD;">done</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br></div></div>`,18)]))}const h=n(l,[["render",o]]);export{b as __pageData,h as default};
