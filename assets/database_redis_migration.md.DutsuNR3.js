import{_ as e,c as s,o as n,ah as r}from"./chunks/framework.BrJYEL96.js";const b=JSON.parse('{"title":"迁移","description":"","frontmatter":{},"headers":[],"relativePath":"database/redis/migration.md","filePath":"database/redis/migration.md","lastUpdated":1738670768000}'),t={name:"database/redis/migration.md"};function l(o,a,i,d,p,c){return n(),s("div",null,a[0]||(a[0]=[r(`<h1 id="迁移" tabindex="-1">迁移 <a class="header-anchor" href="#迁移" aria-label="Permalink to &quot;迁移&quot;">​</a></h1><h2 id="手动迁移" tabindex="-1">手动迁移 <a class="header-anchor" href="#手动迁移" aria-label="Permalink to &quot;手动迁移&quot;">​</a></h2><h4 id="原集群与目标集群结构一致" tabindex="-1">原集群与目标集群结构一致 <a class="header-anchor" href="#原集群与目标集群结构一致" aria-label="Permalink to &quot;原集群与目标集群结构一致&quot;">​</a></h4><ul><li>取消密码（有密码建议取消）</li><li>创建与源集群结构一致的目标集群</li><li>先从后主停掉目标集群服务</li><li>删除目标集群所有节点的AOF和RDB文件</li><li>源集群数据持久化</li><li>复制源集群所有节点AOF文件到目标集群对应的节点</li><li>启动新集群并设置密码</li><li>检查状态，迁移完毕</li></ul><h4 id="原集群与目标集群结构一致-1" tabindex="-1">原集群与目标集群结构一致 <a class="header-anchor" href="#原集群与目标集群结构一致-1" aria-label="Permalink to &quot;原集群与目标集群结构一致&quot;">​</a></h4><p>将所有槽归集到一个节点，源集群持久化，然后在转移数据，然后目标集群在分片</p><h2 id="工具自动迁移" tabindex="-1">工具自动迁移 <a class="header-anchor" href="#工具自动迁移" aria-label="Permalink to &quot;工具自动迁移&quot;">​</a></h2><table tabindex="0"><thead><tr><th>web</th><th>des</th></tr></thead><tbody><tr><td><a href="https://github.com/alibaba/RedisShake" target="_blank" rel="noreferrer">Redis-Shark</a></td><td><a href="https://tair-opensource.github.io/RedisShake/zh/guide/getting-started.html" target="_blank" rel="noreferrer">中文文档</a></td></tr><tr><td><a href="https://github.com/tair-opensource/RedisFullCheck" target="_blank" rel="noreferrer">RedisFullCheck</a></td><td></td></tr></tbody></table><h3 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置" aria-label="Permalink to &quot;配置&quot;">​</a></h3><div class="language-toml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">[</span><span style="color:#61AFEF;">sync_reader</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#E06C75;">address</span><span style="color:#ABB2BF;"> = </span><span style="color:#98C379;">&quot;127.0.0.1:6379&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">[</span><span style="color:#61AFEF;">redis_writer</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#E06C75;">address</span><span style="color:#ABB2BF;"> = </span><span style="color:#98C379;">&quot;127.0.0.1:6380&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="启动" tabindex="-1">启动 <a class="header-anchor" href="#启动" aria-label="Permalink to &quot;启动&quot;">​</a></h3><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">./redis-shake</span><span style="color:#98C379;"> shake.toml</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,12)]))}const u=e(t,[["render",l]]);export{b as __pageData,u as default};
