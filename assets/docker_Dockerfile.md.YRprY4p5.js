import{_ as n,c as a,o as l,ah as e}from"./chunks/framework.BrJYEL96.js";const u=JSON.parse('{"title":"Dockerfile","description":"","frontmatter":{},"headers":[],"relativePath":"docker/Dockerfile.md","filePath":"docker/Dockerfile.md","lastUpdated":1744636143000}'),p={name:"docker/Dockerfile.md"};function o(r,s,c,i,t,d){return l(),a("div",null,s[0]||(s[0]=[e(`<h1 id="dockerfile" tabindex="-1">Dockerfile <a class="header-anchor" href="#dockerfile" aria-label="Permalink to &quot;Dockerfile&quot;">​</a></h1><table tabindex="0"><thead><tr><th>网址</th><th>备注</th></tr></thead><tbody><tr><td><a href="https://docs.docker.com/reference/dockerfile/" target="_blank" rel="noreferrer">Dockerfile</a></td><td></td></tr><tr><td><a href="https://github.com/docker-library/official-images" target="_blank" rel="noreferrer">官方镜像示例</a></td><td></td></tr></tbody></table><h2 id="from" tabindex="-1">FROM <a class="header-anchor" href="#from" aria-label="Permalink to &quot;FROM&quot;">​</a></h2><ul><li><p>官方镜像优于非官方的镜像，如果没有官方镜像，则尽量选择Dockerfile开源的</p></li><li><p>固定版本tag而不是每次都使用latest</p></li><li><p>尽量选择体积小的镜像</p></li></ul><div class="language-dockerfile line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dockerfile</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">FROM</span><span style="color:#ABB2BF;"> nginx:1.21.0-alpine</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="run" tabindex="-1">RUN <a class="header-anchor" href="#run" aria-label="Permalink to &quot;RUN&quot;">​</a></h2><p>尽量一个run命令，否则每一行的RUN命令都会产生一层image layer，导致臃肿。</p><div class="language-dockerfile line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dockerfile</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">FROM</span><span style="color:#ABB2BF;"> ubuntu:20.04</span></span>
<span class="line"><span style="color:#61AFEF;">RUN</span><span style="color:#ABB2BF;"> apt-get update &amp;&amp; \\</span></span>
<span class="line"><span style="color:#ABB2BF;">    apt-get install -y wget &amp;&amp; \\</span></span>
<span class="line"><span style="color:#ABB2BF;">    wget https://github.com/ipinfo/cli/releases/download/ipinfo-2.0.1/ipinfo_2.0.1_linux_amd64.tar.gz &amp;&amp; \\</span></span>
<span class="line"><span style="color:#ABB2BF;">    tar zxf ipinfo_2.0.1_linux_amd64.tar.gz &amp;&amp; \\</span></span>
<span class="line"><span style="color:#ABB2BF;">    mv ipinfo_2.0.1_linux_amd64 /usr/bin/ipinfo &amp;&amp; \\</span></span>
<span class="line"><span style="color:#ABB2BF;">    rm -rf ipinfo_2.0.1_linux_amd64.tar.gz</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="add-copy" tabindex="-1">ADD,COPY <a class="header-anchor" href="#add-copy" aria-label="Permalink to &quot;ADD,COPY&quot;">​</a></h2><div class="language-dockerfile line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dockerfile</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">FROM</span><span style="color:#ABB2BF;"> python:3.9.5-alpine3.13</span></span>
<span class="line"><span style="color:#61AFEF;">COPY</span><span style="color:#ABB2BF;"> hello.py /app/hello.py # copy and add can copy a file to dir</span></span>
<span class="line"><span style="color:#61AFEF;">ADD</span><span style="color:#ABB2BF;"> hello.py /app/hello.py  </span></span>
<span class="line"><span style="color:#61AFEF;">ADD</span><span style="color:#ABB2BF;"> hello.tar.gz /app/      # add can not only copy but uncompress</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="workdir" tabindex="-1">WORKDIR <a class="header-anchor" href="#workdir" aria-label="Permalink to &quot;WORKDIR&quot;">​</a></h2><p>切换工作目录</p><h2 id="arg-vs-env" tabindex="-1">ARG vs ENV <a class="header-anchor" href="#arg-vs-env" aria-label="Permalink to &quot;ARG vs ENV&quot;">​</a></h2><h3 id="env" tabindex="-1">ENV <a class="header-anchor" href="#env" aria-label="Permalink to &quot;ENV&quot;">​</a></h3><p>ENV 设置的变量可以在Image中保持，并在容器中的环境变量里，也就是说进到容器里执行<code>env</code>会显示<code>version</code>变量，更多关注镜像。</p><div class="language-dockerfile line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dockerfile</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">FROM</span><span style="color:#ABB2BF;"> ubuntu:20.04</span></span>
<span class="line"><span style="color:#61AFEF;">ENV</span><span style="color:#ABB2BF;"> VERSION=2.0.1</span></span>
<span class="line"><span style="color:#61AFEF;">RUN</span><span style="color:#ABB2BF;"> apt-get update &amp;&amp; \\</span></span>
<span class="line"><span style="color:#ABB2BF;">    apt-get install -y wget &amp;&amp; \\</span></span>
<span class="line"><span style="color:#ABB2BF;">    wget https://github.com/ipinfo/cli/releases/download/ipinfo-\${VERSION}/ipinfo_\${VERSION}_linux_amd64.tar.gz &amp;&amp; \\</span></span>
<span class="line"><span style="color:#ABB2BF;">    tar zxf ipinfo_\${VERSION}_linux_amd64.tar.gz &amp;&amp; \\</span></span>
<span class="line"><span style="color:#ABB2BF;">    mv ipinfo_\${VERSION}_linux_amd64 /usr/bin/ipinfo &amp;&amp; \\</span></span>
<span class="line"><span style="color:#ABB2BF;">    rm -rf ipinfo_\${VERSION}_linux_amd64.tar.gz</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="arg" tabindex="-1">ARG <a class="header-anchor" href="#arg" aria-label="Permalink to &quot;ARG&quot;">​</a></h3><p>ARG 可以在镜像build的时候动态修改value, 通过 <code>--build-arg</code>，更多关注构建</p><div class="language-dockerfile line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dockerfile</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">FROM</span><span style="color:#ABB2BF;"> ubuntu:20.04</span></span>
<span class="line"><span style="color:#61AFEF;">ARG</span><span style="color:#ABB2BF;"> VERSION=2.0.1</span></span>
<span class="line"><span style="color:#61AFEF;">RUN</span><span style="color:#ABB2BF;"> apt-get update &amp;&amp; \\</span></span>
<span class="line"><span style="color:#ABB2BF;">    apt-get install -y wget &amp;&amp; \\</span></span>
<span class="line"><span style="color:#ABB2BF;">    wget https://github.com/ipinfo/cli/releases/download/ipinfo-\${VERSION}/ipinfo_\${VERSION}_linux_amd64.tar.gz &amp;&amp; \\</span></span>
<span class="line"><span style="color:#ABB2BF;">    tar zxf ipinfo_\${VERSION}_linux_amd64.tar.gz &amp;&amp; \\</span></span>
<span class="line"><span style="color:#ABB2BF;">    mv ipinfo_\${VERSION}_linux_amd64 /usr/bin/ipinfo &amp;&amp; \\</span></span>
<span class="line"><span style="color:#ABB2BF;">    rm -rf ipinfo_\${VERSION}_linux_amd64.tar.gz</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>进入容器可以查看版本</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">root@09c6445b79a4:/#</span><span style="color:#98C379;"> ipinfo</span><span style="color:#98C379;"> version</span></span>
<span class="line"><span style="color:#61AFEF;">2.0.1</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="cmd-entrypoint" tabindex="-1">CMD &amp; ENTRYPOINT <a class="header-anchor" href="#cmd-entrypoint" aria-label="Permalink to &quot;CMD &amp; ENTRYPOINT&quot;">​</a></h2><p>CMD可以用来设置容器启动时默认会执行的命令。</p><ul><li><p>容器启动时默认执行的命令</p></li><li><p>如果docker container run启动容器时指定了其它命令，则CMD命令会被忽略</p></li><li><p>如果定义了多个CMD，只有最后一个会被执行。</p></li></ul><p>ENTRYPOINT 也可以设置容器启动时要执行的命令，但是和CMD是有区别的。</p><ul><li><code>CMD</code> 设置的命令，可以在docker container run 时传入其它命令，覆盖掉 <code>CMD</code> 的命令，但是 <code>ENTRYPOINT</code> 所设置的命令是一定会被执行的。</li><li><code>ENTRYPOINT</code> 和 <code>CMD</code> 可以联合使用，<code>ENTRYPOINT</code> 设置执行的命令，CMD传递参数</li></ul><div class="language-dockerfile line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dockerfile</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">FROM</span><span style="color:#ABB2BF;"> ubuntu:20.04</span></span>
<span class="line"><span style="color:#61AFEF;">ENTRYPOINT</span><span style="color:#ABB2BF;"> [</span><span style="color:#98C379;">&quot;echo&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&quot;hello point&quot;</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#61AFEF;">CMD</span><span style="color:#ABB2BF;"> []</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># docker run -it --rm both echo test</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># hello point echo test</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="shell格式" tabindex="-1">Shell格式 <a class="header-anchor" href="#shell格式" aria-label="Permalink to &quot;Shell格式&quot;">​</a></h3><div class="language-dockerfile line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dockerfile</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">CMD</span><span style="color:#ABB2BF;"> echo </span><span style="color:#98C379;">&quot;hello docker&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">ENTRYPOINT</span><span style="color:#ABB2BF;"> echo </span><span style="color:#98C379;">&quot;hello docker&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="exec格式" tabindex="-1">Exec格式 <a class="header-anchor" href="#exec格式" aria-label="Permalink to &quot;Exec格式&quot;">​</a></h3><p>以可执行命令的方式</p><div class="language-dockerfile line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dockerfile</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">ENTRYPOINT</span><span style="color:#ABB2BF;"> [</span><span style="color:#98C379;">&quot;echo&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;hello docker&quot;</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#61AFEF;">CMD</span><span style="color:#ABB2BF;"> [</span><span style="color:#98C379;">&quot;echo&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;hello docker&quot;</span><span style="color:#ABB2BF;">]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><code>&quot;sh&quot;, &quot;-c&quot;</code>执行带变量的命令</p><div class="language-dockerfile line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dockerfile</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">FROM</span><span style="color:#ABB2BF;"> ubuntu:20.04</span></span>
<span class="line"><span style="color:#61AFEF;">ENV</span><span style="color:#ABB2BF;"> NAME=docker</span></span>
<span class="line"><span style="color:#61AFEF;">CMD</span><span style="color:#ABB2BF;"> echo </span><span style="color:#98C379;">&quot;hello $NAME&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># hello docker</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-dockerfile line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dockerfile</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">FROM</span><span style="color:#ABB2BF;"> ubuntu:20.04</span></span>
<span class="line"><span style="color:#61AFEF;">ENV</span><span style="color:#ABB2BF;"> NAME=docker</span></span>
<span class="line"><span style="color:#61AFEF;">CMD</span><span style="color:#ABB2BF;"> [</span><span style="color:#98C379;">&quot;echo&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;hello $NAME&quot;</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># hello $NAME</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-dockerfile line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dockerfile</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">FROM</span><span style="color:#ABB2BF;"> ubuntu:20.04</span></span>
<span class="line"><span style="color:#61AFEF;">ENV</span><span style="color:#ABB2BF;"> NAME=docker</span></span>
<span class="line"><span style="color:#61AFEF;">CMD</span><span style="color:#ABB2BF;"> [</span><span style="color:#98C379;">&quot;sh&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;-c&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;echo hello $NAME&quot;</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># hello docker</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>综合示例</p><div class="language-dockerfile line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dockerfile</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">FROM</span><span style="color:#ABB2BF;"> python:3.9.5-slim</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">COPY</span><span style="color:#ABB2BF;"> app.py /src/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">RUN</span><span style="color:#ABB2BF;"> pip install flask</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">WORKDIR</span><span style="color:#ABB2BF;"> /src</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">ENV</span><span style="color:#ABB2BF;"> FLASK=APP.PY</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">EXPOSE</span><span style="color:#ABB2BF;"> 5000</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># CMD [ &quot;flask&quot;, &quot;run&quot;, &quot;-h&quot;, &quot;0.0.0.0&quot;]</span></span>
<span class="line"><span style="color:#61AFEF;">CMD</span><span style="color:#ABB2BF;"> [ </span><span style="color:#98C379;">&quot;flask&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;run&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;--host=0.0.0.0&quot;</span><span style="color:#ABB2BF;">]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="context" tabindex="-1">context <a class="header-anchor" href="#context" aria-label="Permalink to &quot;context&quot;">​</a></h2><p><code>docker image build -t demo .</code>中的<code>.</code>代表当前目录，也就是context</p><p><code>.dockerignore</code> 文件类似<code>.gitignore</code>。</p><h2 id="镜像的多阶段构建" tabindex="-1">镜像的多阶段构建 <a class="header-anchor" href="#镜像的多阶段构建" aria-label="Permalink to &quot;镜像的多阶段构建&quot;">​</a></h2><div class="language-c line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">#include</span><span style="color:#98C379;"> &lt;stdio.h&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">void</span><span style="color:#61AFEF;"> main</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">int</span><span style="color:#E06C75;font-style:italic;"> argc</span><span style="color:#ABB2BF;">,</span><span style="color:#C678DD;"> char</span><span style="color:#C678DD;"> *</span><span style="color:#E06C75;font-style:italic;">argv</span><span style="color:#C678DD;">[]</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#61AFEF;">    printf</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;hello </span><span style="color:#D19A66;">%s</span><span style="color:#56B6C2;">\\n</span><span style="color:#98C379;">&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">argv</span><span style="color:#ABB2BF;">[argc </span><span style="color:#C678DD;">-</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">]);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>如下构建方式，镜像很大</p><div class="language-dockerfile line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dockerfile</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">FROM</span><span style="color:#ABB2BF;"> gcc:9.4</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">COPY</span><span style="color:#ABB2BF;"> hello.c /src/hello.c</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">WORKDIR</span><span style="color:#ABB2BF;"> /src</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">RUN</span><span style="color:#ABB2BF;"> gcc --static -o hello hello.c</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">ENTRYPOINT</span><span style="color:#ABB2BF;"> [ </span><span style="color:#98C379;">&quot;/src/hello&quot;</span><span style="color:#ABB2BF;"> ]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">CMD</span><span style="color:#ABB2BF;"> []</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>如下构建方式，镜像较小</p><div class="language-dockerfile line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dockerfile</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">FROM</span><span style="color:#ABB2BF;"> gcc:9.4 </span><span style="color:#61AFEF;">AS</span><span style="color:#ABB2BF;"> builder</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">COPY</span><span style="color:#ABB2BF;"> hello.c /src/hello.c</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">WORKDIR</span><span style="color:#ABB2BF;"> /src</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">RUN</span><span style="color:#ABB2BF;"> gcc --static -o hello hello.c</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">FROM</span><span style="color:#ABB2BF;"> alpine:3.13.5</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">COPY</span><span style="color:#ABB2BF;"> --from=builder /src/hello /src/hello</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">ENTRYPOINT</span><span style="color:#ABB2BF;"> [ </span><span style="color:#98C379;">&quot;/src/hello&quot;</span><span style="color:#ABB2BF;"> ]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">CMD</span><span style="color:#ABB2BF;"> []</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h2 id="expose" tabindex="-1">EXPOSE <a class="header-anchor" href="#expose" aria-label="Permalink to &quot;EXPOSE&quot;">​</a></h2><p>更多的是是提示作用，是否暴露都可以使用端口， 在build完镜像后，可通过<code>docker image inspect &lt;image id&gt;</code> 查看暴露的端口，在config里查看。同时也可以定义类型，如</p><div class="language-dockerfile line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dockerfile</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">EXPOSE</span><span style="color:#ABB2BF;"> 80/udp</span></span>
<span class="line"><span style="color:#61AFEF;">EXPOSE</span><span style="color:#ABB2BF;"> 80/tcp</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>`,50)]))}const B=n(p,[["render",o]]);export{u as __pageData,B as default};
