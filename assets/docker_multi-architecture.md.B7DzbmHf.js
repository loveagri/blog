import{_ as n,c as a,o as e,ah as l}from"./chunks/framework.BrJYEL96.js";const b=JSON.parse('{"title":"Docker 的多架构支持","description":"","frontmatter":{},"headers":[],"relativePath":"docker/multi-architecture.md","filePath":"docker/multi-architecture.md","lastUpdated":1719317271000}'),r={name:"docker/multi-architecture.md"};function p(o,s,c,t,i,d){return e(),a("div",null,s[0]||(s[0]=[l(`<h1 id="docker-的多架构支持" tabindex="-1">Docker 的多架构支持 <a class="header-anchor" href="#docker-的多架构支持" aria-label="Permalink to &quot;Docker 的多架构支持&quot;">​</a></h1><p>Windows和Mac的桌面版Docker自带buildx命令，但是Linux环境下的Docker需要自行安装buildx （<a href="https://github.com/docker/buildx%EF%BC%89%EF%BC%8C%5B%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3%5D(https://docs.docker.com/buildx/working-with-buildx/)" target="_blank" rel="noreferrer">https://github.com/docker/buildx），[官方文档](https://docs.docker.com/buildx/working-with-buildx/)</a></p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">docker</span><span style="color:#98C379;"> login</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># show buildx container</span></span>
<span class="line"><span style="color:#61AFEF;">docker</span><span style="color:#98C379;"> buildx</span><span style="color:#98C379;"> ls</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># create a build container</span></span>
<span class="line"><span style="color:#61AFEF;">docker</span><span style="color:#98C379;"> buildx</span><span style="color:#98C379;"> create</span><span style="color:#D19A66;"> --name</span><span style="color:#98C379;"> mybuilder</span><span style="color:#D19A66;"> --use</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># create and push multi-image</span></span>
<span class="line"><span style="color:#61AFEF;">docker</span><span style="color:#98C379;"> buildx</span><span style="color:#98C379;"> build</span><span style="color:#D19A66;"> --push</span><span style="color:#D19A66;"> --platform</span><span style="color:#98C379;"> linux/arm/v7,linux/arm64/v8,linux/amd64</span><span style="color:#D19A66;"> -t</span><span style="color:#98C379;"> xiaopeng163/flask-redis:latest</span><span style="color:#98C379;"> .</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># remove build container</span></span>
<span class="line"><span style="color:#61AFEF;">docker</span><span style="color:#98C379;"> buildx</span><span style="color:#98C379;"> rm</span><span style="color:#98C379;"> mybuilder</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div>`,3)]))}const m=n(r,[["render",p]]);export{b as __pageData,m as default};
