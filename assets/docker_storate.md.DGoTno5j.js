import{_ as a,c as n,o as l,ah as o}from"./chunks/framework.BrJYEL96.js";const b=JSON.parse('{"title":"存储Volume & Bind mount","description":"","frontmatter":{},"headers":[],"relativePath":"docker/storate.md","filePath":"docker/storate.md","lastUpdated":1736052165000}'),e={name:"docker/storate.md"};function p(r,s,c,t,i,d){return l(),n("div",null,s[0]||(s[0]=[o(`<h1 id="存储volume-bind-mount" tabindex="-1">存储Volume &amp; Bind mount <a class="header-anchor" href="#存储volume-bind-mount" aria-label="Permalink to &quot;存储Volume &amp; Bind mount&quot;">​</a></h1><p>Docker主要提供了两种方式做数据的持久化</p><ul><li>Data Volume, 由Docker管理，(/var/lib/docker/volumes/ Linux), 持久化数据的最好方式，是在特定目录设置别名，目录一般为<code>/var/lib/docker/volumes/&lt;别名&gt;/_data/</code></li><li>Bind Mount，由用户指定存储的数据具体mount在系统什么位置</li></ul><h2 id="volume" tabindex="-1">Volume <a class="header-anchor" href="#volume" aria-label="Permalink to &quot;Volume&quot;">​</a></h2><h3 id="准备工作" tabindex="-1">准备工作 <a class="header-anchor" href="#准备工作" aria-label="Permalink to &quot;准备工作&quot;">​</a></h3><div class="warning custom-block"><p class="custom-block-title">警告</p><p>需要Linux系统的环境</p></div><p>Dockerfile文件：</p><div class="language-dockerfile line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dockerfile</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">FROM</span><span style="color:#ABB2BF;"> alpine:latest</span></span>
<span class="line"><span style="color:#61AFEF;">RUN</span><span style="color:#ABB2BF;"> apk update</span></span>
<span class="line"><span style="color:#61AFEF;">RUN</span><span style="color:#ABB2BF;"> apk --no-cache add curl</span></span>
<span class="line"><span style="color:#61AFEF;">ENV</span><span style="color:#ABB2BF;"> SUPERCRONIC_URL=https://github.com/aptible/supercronic/releases/download/v0.1.12/supercronic-linux-amd64 \\</span></span>
<span class="line"><span style="color:#ABB2BF;">    SUPERCRONIC=supercronic-linux-amd64 \\</span></span>
<span class="line"><span style="color:#ABB2BF;">    SUPERCRONIC_SHA1SUM=048b95b48b708983effb2e5c935a1ef8483d9e3e</span></span>
<span class="line"><span style="color:#61AFEF;">RUN</span><span style="color:#ABB2BF;"> curl -fsSLO </span><span style="color:#98C379;">&quot;$SUPERCRONIC_URL&quot;</span><span style="color:#ABB2BF;"> \\</span></span>
<span class="line"><span style="color:#ABB2BF;">    &amp;&amp; echo </span><span style="color:#98C379;">&quot;\${SUPERCRONIC_SHA1SUM}  \${SUPERCRONIC}&quot;</span><span style="color:#ABB2BF;"> | sha1sum -c - \\</span></span>
<span class="line"><span style="color:#ABB2BF;">    &amp;&amp; chmod +x </span><span style="color:#98C379;">&quot;$SUPERCRONIC&quot;</span><span style="color:#ABB2BF;"> \\</span></span>
<span class="line"><span style="color:#ABB2BF;">    &amp;&amp; mv </span><span style="color:#98C379;">&quot;$SUPERCRONIC&quot;</span><span style="color:#98C379;"> &quot;/usr/local/bin/\${SUPERCRONIC}&quot;</span><span style="color:#ABB2BF;"> \\</span></span>
<span class="line"><span style="color:#ABB2BF;">    &amp;&amp; ln -s </span><span style="color:#98C379;">&quot;/usr/local/bin/\${SUPERCRONIC}&quot;</span><span style="color:#ABB2BF;"> /usr/local/bin/supercronic</span></span>
<span class="line"><span style="color:#61AFEF;">COPY</span><span style="color:#ABB2BF;"> my-cron /app/my-cron</span></span>
<span class="line"><span style="color:#61AFEF;">WORKDIR</span><span style="color:#ABB2BF;"> /app</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">VOLUME</span><span style="color:#ABB2BF;"> [</span><span style="color:#98C379;">&quot;/app&quot;</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># RUN cron job</span></span>
<span class="line"><span style="color:#61AFEF;">CMD</span><span style="color:#ABB2BF;"> [</span><span style="color:#98C379;">&quot;/usr/local/bin/supercronic&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;/app/my-cron&quot;</span><span style="color:#ABB2BF;">]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>my-cron文件：</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">*/1 * * * * date &gt;&gt; /app/test.txt</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>构建镜像</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">docker</span><span style="color:#98C379;"> image</span><span style="color:#98C379;"> build</span><span style="color:#D19A66;"> -t</span><span style="color:#98C379;"> my-cron</span><span style="color:#98C379;"> .</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="创建容器-不指定-v参数" tabindex="-1">创建容器(不指定-v参数) <a class="header-anchor" href="#创建容器-不指定-v参数" aria-label="Permalink to &quot;创建容器(不指定-v参数)&quot;">​</a></h3><p>Docker会自动创建一个随机名字的volume，去存储在Dockerfile定义的volume <code>VOLUME [&quot;/app&quot;]</code>。</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">docker</span><span style="color:#98C379;"> run</span><span style="color:#D19A66;"> -d</span><span style="color:#98C379;"> my-cron</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">docker</span><span style="color:#98C379;"> volume</span><span style="color:#98C379;"> ls</span><span style="color:#7F848E;font-style:italic;"> # 随机名字的volume</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="创建容器-指定-v参数" tabindex="-1">创建容器(指定-v参数) <a class="header-anchor" href="#创建容器-指定-v参数" aria-label="Permalink to &quot;创建容器(指定-v参数)&quot;">​</a></h3><p>在创建容器的时候通过 <code>-v</code> 参数可以手动的指定需要创建Volume的名字，以及对应于容器内的路径，这个路径是可以任意的，不必需要在Dockerfile里通过VOLUME定义。</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">docker</span><span style="color:#98C379;"> container</span><span style="color:#98C379;"> run</span><span style="color:#D19A66;"> -d</span><span style="color:#D19A66;"> -v</span><span style="color:#98C379;"> cron-data:/app</span><span style="color:#98C379;"> my-cron</span><span style="color:#7F848E;font-style:italic;"> # 固定名字cron-data</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="环境清理" tabindex="-1">环境清理 <a class="header-anchor" href="#环境清理" aria-label="Permalink to &quot;环境清理&quot;">​</a></h3><p>强制删除所有容器，系统清理和volume清理</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">docker</span><span style="color:#98C379;"> rm</span><span style="color:#D19A66;"> -f</span><span style="color:#ABB2BF;"> $(</span><span style="color:#61AFEF;">docker</span><span style="color:#98C379;"> container</span><span style="color:#98C379;"> ps</span><span style="color:#D19A66;"> -aq</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#61AFEF;">docker</span><span style="color:#98C379;"> system</span><span style="color:#98C379;"> prune</span><span style="color:#D19A66;"> -f</span><span style="color:#7F848E;font-style:italic;"> # docker disk</span></span>
<span class="line"><span style="color:#61AFEF;">docker</span><span style="color:#98C379;"> volume</span><span style="color:#98C379;"> prune</span><span style="color:#D19A66;"> -f</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="bind-mount" tabindex="-1">Bind Mount <a class="header-anchor" href="#bind-mount" aria-label="Permalink to &quot;Bind Mount&quot;">​</a></h2><p>Bind Mount 是直接自定义同步目录</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">docker</span><span style="color:#98C379;"> container</span><span style="color:#98C379;"> run</span><span style="color:#D19A66;"> -d</span><span style="color:#D19A66;"> -v</span><span style="color:#ABB2BF;"> &lt;</span><span style="color:#98C379;">local</span><span style="color:#98C379;"> di</span><span style="color:#ABB2BF;">r&gt;</span><span style="color:#98C379;">:</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#98C379;">container-di</span><span style="color:#ABB2BF;">r&gt; </span><span style="color:#98C379;">container</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># for example</span></span>
<span class="line"><span style="color:#61AFEF;">docker</span><span style="color:#98C379;"> container</span><span style="color:#98C379;"> run</span><span style="color:#D19A66;"> -d</span><span style="color:#D19A66;"> -v</span><span style="color:#ABB2BF;"> $(</span><span style="color:#56B6C2;">pwd</span><span style="color:#ABB2BF;">)|\${</span><span style="color:#E06C75;">pwd</span><span style="color:#ABB2BF;">}:/app container</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="warning custom-block"><p class="custom-block-title">警告</p><p>Windows需要将要同步的本地路径添加到允许路径</p><img src="https://raw.gitcode.com/loveagri/pic/raw/main/2024-06-15/14/70538_image-20240615143025838.png" alt="image-20240615143025838" style="zoom:33%;"></div>`,25)]))}const y=a(e,[["render",p]]);export{b as __pageData,y as default};
