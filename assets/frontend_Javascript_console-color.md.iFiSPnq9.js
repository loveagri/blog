import{_ as e,c as o,o as s,ah as a}from"./chunks/framework.BrJYEL96.js";const m=JSON.parse('{"title":"node环境实现console输出不同颜色","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/Javascript/console-color.md","filePath":"frontend/Javascript/console-color.md","lastUpdated":1717048906000}'),n={name:"frontend/Javascript/console-color.md"};function r(c,l,i,t,p,d){return s(),o("div",null,l[0]||(l[0]=[a(`<h1 id="node环境实现console输出不同颜色" tabindex="-1">node环境实现console输出不同颜色 <a class="header-anchor" href="#node环境实现console输出不同颜色" aria-label="Permalink to &quot;node环境实现console输出不同颜色&quot;">​</a></h1><p>参考链接：</p><p>​ <a href="https://www.cnblogs.com/xsSystem/p/16540205.html" target="_blank" rel="noreferrer">ode环境实现console输出不同颜色</a></p><p>​ <a href="https://blog.csdn.net/weixin_45716124/article/details/126690394" target="_blank" rel="noreferrer">Nodejs控制台console输出颜色控制</a></p><h2 id="一、输出规则分析" tabindex="-1">一、输出规则分析 <a class="header-anchor" href="#一、输出规则分析" aria-label="Permalink to &quot;一、输出规则分析&quot;">​</a></h2><h3 id="_1、输出及打印如下" tabindex="-1">1、输出及打印如下： <a class="header-anchor" href="#_1、输出及打印如下" aria-label="Permalink to &quot;1、输出及打印如下：&quot;">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;</span><span style="color:#56B6C2;">\\x1B</span><span style="color:#98C379;">[31m%s</span><span style="color:#56B6C2;">\\x1B</span><span style="color:#98C379;">[0m&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;这是红色&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;</span><span style="color:#56B6C2;">\\x1B</span><span style="color:#98C379;">[36m%s</span><span style="color:#56B6C2;">\\x1B</span><span style="color:#98C379;">[0m&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;这是青色&#39;</span><span style="color:#ABB2BF;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="_2、规则说明" tabindex="-1">2、规则说明 <a class="header-anchor" href="#_2、规则说明" aria-label="Permalink to &quot;2、规则说明&quot;">​</a></h3><ul><li><p><strong><code>\\x1B[31m</code> 是一个转义序列，它将被您的终端拦截并指示它切换到红色。<code>\\x1B</code>是不可打印控制字符 的代码escape。仅处理颜色和样式的转义序列也称为 <a href="https://en.wikipedia.org/wiki/ANSI_escape_code#Colors" target="_blank" rel="noreferrer">ANSI转义码</a> 并且是标准化的，因此它们（应该）可以在任何平台上工作。这里可以指定多种样式<code>\\x1B[31m\\x1B[42m</code>；</strong></p></li><li><p><strong><code>%s</code> 是字符串（第二个参数）被注入的位置；上述代码还可以这样写：</strong></p><p>console.log(&#39;\\x1B[31m这是红色\\x1B[0m&#39;)</p><p>console.log(&#39;\\x1B[36m这是青色\\x1B[0m&#39;)</p></li><li><p><strong><code>\\x1B[0m</code> 表示重置终端颜色，使其在此之后不再继续成为所选颜色；</strong></p></li></ul><h2 id="二、颜色参考" tabindex="-1">二、颜色参考 <a class="header-anchor" href="#二、颜色参考" aria-label="Permalink to &quot;二、颜色参考&quot;">​</a></h2><ol><li>&#39;bright&#39; : &#39;\\x1B[1m&#39;, // 亮色</li><li>&#39;grey&#39; : &#39;\\x1B[2m&#39;, // 灰色</li><li>&#39;italic&#39; : &#39;\\x1B[3m&#39;, // 斜体</li><li>&#39;underline&#39; : &#39;\\x1B[4m&#39;, // 下划线</li><li>&#39;reverse&#39; : &#39;\\x1B[7m&#39;, // 反向</li><li>&#39;hidden&#39; : &#39;\\x1B[8m&#39;, // 隐藏</li><li>&#39;black&#39; : &#39;\\x1B[30m&#39;, // 黑色</li><li>&#39;red&#39; : &#39;\\x1B[31m&#39;, // 红色</li><li>&#39;green&#39; : &#39;\\x1B[32m&#39;, // 绿色</li><li>&#39;yellow&#39; : &#39;\\x1B[33m&#39;, // 黄色</li><li>&#39;blue&#39; : &#39;\\x1B[34m&#39;, // 蓝色</li><li>&#39;magenta&#39; : &#39;\\x1B[35m&#39;, // 品红</li><li>&#39;cyan&#39; : &#39;\\x1B[36m&#39;, // 青色</li><li>&#39;white&#39; : &#39;\\x1B[37m&#39;, // 白色</li><li>&#39;blackBG&#39; : &#39;\\x1B[40m&#39;, // 背景色为黑色</li><li>&#39;redBG&#39; : &#39;\\x1B[41m&#39;, // 背景色为红色</li><li>&#39;greenBG&#39; : &#39;\\x1B[42m&#39;, // 背景色为绿色</li><li>&#39;yellowBG&#39; : &#39;\\x1B[43m&#39;, // 背景色为黄色</li><li>&#39;blueBG&#39; : &#39;\\x1B[44m&#39;, // 背景色为蓝色</li><li>&#39;magentaBG&#39; : &#39;\\x1B[45m&#39;, // 背景色为品红</li><li>&#39;cyanBG&#39; : &#39;\\x1B[46m&#39;, // 背景色为青色</li><li>&#39;whiteBG&#39; : &#39;\\x1B[47m&#39; // 背景色为白色</li></ol><h2 id="三、colors-console插件下载使用" tabindex="-1">三、colors-console插件下载使用 <a class="header-anchor" href="#三、colors-console插件下载使用" aria-label="Permalink to &quot;三、colors-console插件下载使用&quot;">​</a></h2><p>下载</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> i</span><span style="color:#98C379;"> colors-console</span><span style="color:#D19A66;"> -D</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,14)]))}const h=e(n,[["render",r]]);export{m as __pageData,h as default};
