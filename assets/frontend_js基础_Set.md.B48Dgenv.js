import{_ as a,c as n,o,ah as l}from"./chunks/framework.BrJYEL96.js";const d=JSON.parse('{"title":"Set","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/js基础/Set.md","filePath":"frontend/js基础/Set.md","lastUpdated":1734536287000}'),e={name:"frontend/js基础/Set.md"};function p(t,s,r,c,B,y){return o(),n("div",null,s[0]||(s[0]=[l(`<h1 id="set" tabindex="-1">Set <a class="header-anchor" href="#set" aria-label="Permalink to &quot;Set&quot;">​</a></h1><h3 id="数组转换" tabindex="-1">数组转换 <a class="header-anchor" href="#数组转换" aria-label="Permalink to &quot;数组转换&quot;">​</a></h3><p>可以使用<code>点语法</code> 或 <code>Array.form</code> 静态方法将Set类型转为数组，这样就可以使用数组处理函数了</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> set</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Set</span><span style="color:#ABB2BF;">([</span><span style="color:#98C379;">&quot;love&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;you&quot;</span><span style="color:#ABB2BF;">])</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">([...</span><span style="color:#E06C75;">set</span><span style="color:#ABB2BF;">]) </span><span style="color:#7F848E;font-style:italic;">//[&quot;love&quot;, &quot;you&quot;]</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Array</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">from</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">set</span><span style="color:#ABB2BF;">)) </span><span style="color:#7F848E;font-style:italic;">//[&quot;love&quot;, &quot;you&quot;]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="去除重复" tabindex="-1">去除重复 <a class="header-anchor" href="#去除重复" aria-label="Permalink to &quot;去除重复&quot;">​</a></h3><p>去除字符串重复</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">([...</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> Set</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;I love you to much&quot;</span><span style="color:#ABB2BF;">)].</span><span style="color:#61AFEF;">join</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#ABB2BF;">));</span><span style="color:#7F848E;font-style:italic;">//I loveyutmch</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="遍历数据" tabindex="-1">遍历数据 <a class="header-anchor" href="#遍历数据" aria-label="Permalink to &quot;遍历数据&quot;">​</a></h3><p>使用 <code>keys()/values()/entries()</code> 都可以返回迭代对象，因为<code>set</code>类型只有值所以 <code>keys与values</code> 方法结果一致。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> hd</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Set</span><span style="color:#ABB2BF;">([</span><span style="color:#98C379;">&quot;love&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;you&quot;</span><span style="color:#ABB2BF;">])</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">hd</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">values</span><span style="color:#ABB2BF;">()) </span><span style="color:#7F848E;font-style:italic;">//SetIterator {&quot;love&quot;, &quot;you&quot;}</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">hd</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">keys</span><span style="color:#ABB2BF;">()) </span><span style="color:#7F848E;font-style:italic;">//SetIterator {&quot;love&quot;, &quot;you&quot;}</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">hd</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">entries</span><span style="color:#ABB2BF;">()) </span><span style="color:#7F848E;font-style:italic;">//SetIterator {&quot;love&quot; =&gt; &quot;love&quot;, &quot;you&quot; =&gt; &quot;you&quot;}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>可以使用 <code>forEach</code> 遍历Set数据，默认使用 <code>values</code> 方法创建迭代器。</p><p>为了保持和遍历数组参数统一，函数中的value与key是一样的。</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> arr</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> [</span><span style="color:#D19A66;">7</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">6</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">8</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">6</span><span style="color:#ABB2BF;">];</span></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> set</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Set</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">arr</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//使用forEach遍历</span></span>
<span class="line"><span style="color:#E5C07B;">set</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">forEach</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">item</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;font-style:italic;">key</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#E5C07B;"> console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">item</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">));</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>也可以使用 <code>forof</code> 遍历Set数据，默认使用 <code>values</code> 方法创建迭代器</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">//使用for/of遍历</span></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> set</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Set</span><span style="color:#ABB2BF;">([</span><span style="color:#D19A66;">7</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">6</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">8</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">6</span><span style="color:#ABB2BF;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> iterator</span><span style="color:#C678DD;"> of</span><span style="color:#E06C75;"> set</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">  console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">iterator</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="weakset" tabindex="-1">WeakSet <a class="header-anchor" href="#weakset" aria-label="Permalink to &quot;WeakSet&quot;">​</a></h2><p>WeakSet结构同样不会存储重复的值，它的成员必须只能是对象类型的值。</p><h3 id="声明定义" tabindex="-1">声明定义 <a class="header-anchor" href="#声明定义" aria-label="Permalink to &quot;声明定义&quot;">​</a></h3><p>以下操作由于数据不是对象类型将产生错误</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> WeakSet</span><span style="color:#ABB2BF;">([</span><span style="color:#98C379;">&quot;hdcms&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;houdunren&quot;</span><span style="color:#ABB2BF;">]); </span><span style="color:#7F848E;font-style:italic;">//Invalid value used in weak set 数组内的值需要为对象类型，因为会分别存储。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> WeakSet</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;hdcms&quot;</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">//Invalid value used in weak set</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>WeakSet的值必须为对象类型</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> WeakSet</span><span style="color:#ABB2BF;">([[</span><span style="color:#98C379;">&quot;hdcms&quot;</span><span style="color:#ABB2BF;">], [</span><span style="color:#98C379;">&quot;houdunren&quot;</span><span style="color:#ABB2BF;">]]);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,22)]))}const u=a(e,[["render",p]]);export{d as __pageData,u as default};
