import{_ as n,c as a,o as l,ah as o}from"./chunks/framework.BrJYEL96.js";const b=JSON.parse('{"title":"Symbol","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/js基础/Symbol.md","filePath":"frontend/js基础/Symbol.md","lastUpdated":1734536287000}'),p={name:"frontend/js基础/Symbol.md"};function e(r,s,c,t,y,B){return l(),a("div",null,s[0]||(s[0]=[o(`<h1 id="symbol" tabindex="-1">Symbol <a class="header-anchor" href="#symbol" aria-label="Permalink to &quot;Symbol&quot;">​</a></h1><p>Symbol用于防止属性名冲突而产生的，比如向第三方对象中添加属性时。</p><p>Symbol 的值是唯一的，独一无二的不会重复的。</p><p>可以简单的理解为symbol就是一个不可能重复的字符串。</p><h2 id="基础知识" tabindex="-1">基础知识 <a class="header-anchor" href="#基础知识" aria-label="Permalink to &quot;基础知识&quot;">​</a></h2><h3 id="symbol-1" tabindex="-1">Symbol <a class="header-anchor" href="#symbol-1" aria-label="Permalink to &quot;Symbol&quot;">​</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> v1</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> Symbol</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> v2</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> Symbol</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">v1</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">//symbol</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">v1</span><span style="color:#56B6C2;"> ==</span><span style="color:#E06C75;"> v2</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">//false</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>Symbol 不可以添加属性</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> v1</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> Symbol</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">v1</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">name</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;后盾人&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">v1</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="描述参数" tabindex="-1">描述参数 <a class="header-anchor" href="#描述参数" aria-label="Permalink to &quot;描述参数&quot;">​</a></h3><p>可传入字符串用于描述Symbol，方便在控制台分辨Symbol</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> v1</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> Symbol</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;v1&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> v2</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> Symbol</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;v2&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">v1</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">//Symbol(v1)</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">v2</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">toString</span><span style="color:#ABB2BF;">()); </span><span style="color:#7F848E;font-style:italic;">//Symbol(v2)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>传入相同参数Symbol也是独立唯一的，因为参数只是描述而已，但使用 <code>Symbol.for</code>则不会</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> v1</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> Symbol</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;des&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> v2</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> Symbol</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;des&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">v1</span><span style="color:#56B6C2;"> ==</span><span style="color:#E06C75;"> v2</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">//false</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>使用<code>description</code>可以获取传入的描述参数</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> v1</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> Symbol</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;des&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">v1</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">description</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="symbol-for" tabindex="-1">Symbol.for <a class="header-anchor" href="#symbol-for" aria-label="Permalink to &quot;Symbol.for&quot;">​</a></h3><p>根据描述获取Symbol，如果不存在则新建一个Symbol</p><ul><li>使用Symbol.for会在系统中将Symbol登记</li><li>使用Symbol则不会登记</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> v1</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> Symbol</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">for</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;for&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> v2</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> Symbol</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">for</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;后for盾人&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">v1</span><span style="color:#56B6C2;"> ==</span><span style="color:#E06C75;"> v2</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">//true</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="symbol-keyfor" tabindex="-1">Symbol.keyFor <a class="header-anchor" href="#symbol-keyfor" aria-label="Permalink to &quot;Symbol.keyFor&quot;">​</a></h3><p><code>Symbol.keyFor</code> 根据使用<code>Symbol.for</code>登记的Symbol返回描述，如果找不到返回undefined 。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> v1</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> Symbol</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">for</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;for&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Symbol</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">keyFor</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">v1</span><span style="color:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> v2</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> Symbol</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;for&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Symbol</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">keyFor</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">v2</span><span style="color:#ABB2BF;">))</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="对象属性" tabindex="-1">对象属性 <a class="header-anchor" href="#对象属性" aria-label="Permalink to &quot;对象属性&quot;">​</a></h3><p>Symbol 是独一无二的所以可以保证对象属性的唯一。</p><ul><li>Symbol 声明和访问是使用 <code>[]</code>（变量）形式操作</li><li>也不能使用 <code>.</code> 语法因为 <code>.</code>语法是操作字符串属性的。</li></ul><p>下面写法是错误的，会将<code>symbol</code> 当成字符串<code>symbol</code>处理</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> v1</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> Symbol</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">for</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;for&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> obj</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">		v1</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;for&#39;s value&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">v1</span><span style="color:#ABB2BF;">]); </span><span style="color:#7F848E;font-style:italic;">//undefined</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">obj</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">    [</span><span style="color:#E06C75;">v1</span><span style="color:#ABB2BF;">]: </span><span style="color:#98C379;">&quot;symbol&#39;s value&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">v1</span><span style="color:#ABB2BF;">])</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="遍历属性" tabindex="-1">遍历属性 <a class="header-anchor" href="#遍历属性" aria-label="Permalink to &quot;遍历属性&quot;">​</a></h3><p>Symbol 不能使用 <code>for/in</code>、<code>for/of</code> 遍历操作，使用 <code>Object.getOwnPropertySymbols</code> 获取所有<code>Symbol</code>属性。也可以使用 <code>Reflect.ownKeys(obj)</code> 获取所有属性包括<code>Symbol</code>。</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> v1</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> Symbol</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">for</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;for&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> obj</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">    v1</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;for&#39;s value&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    [</span><span style="color:#E06C75;">v1</span><span style="color:#ABB2BF;">]: </span><span style="color:#98C379;">&quot;for&#39;s value&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> key</span><span style="color:#C678DD;"> of</span><span style="color:#E5C07B;"> Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getOwnPropertySymbols</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#E5C07B;">    console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// Symbol(for)</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> key</span><span style="color:#C678DD;"> of</span><span style="color:#E5C07B;"> Reflect</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">ownKeys</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#E5C07B;">    console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">//v1, Symbol(for) </span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>如果对象属性不想被遍历，可以使用<code>Symbol</code>作为键值进行保护。</p>`,32)]))}const d=n(p,[["render",e]]);export{b as __pageData,d as default};
