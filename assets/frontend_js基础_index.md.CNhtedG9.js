import{_ as e,c as o,o as r,ah as t}from"./chunks/framework.BrJYEL96.js";const p=JSON.parse('{"title":"js基础知识","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/js基础/index.md","filePath":"frontend/js基础/index.md","lastUpdated":1734536287000}'),n={name:"frontend/js基础/index.md"};function d(i,a,s,f,c,l){return r(),o("div",null,a[0]||(a[0]=[t('<h1 id="js基础知识" tabindex="-1">js基础知识 <a class="header-anchor" href="#js基础知识" aria-label="Permalink to &quot;js基础知识&quot;">​</a></h1><h3 id="变量声明" tabindex="-1">变量声明 <a class="header-anchor" href="#变量声明" aria-label="Permalink to &quot;变量声明&quot;">​</a></h3><p>使用 <code>var</code> 声明代码会被提升到前面</p><h2 id="流程控制" tabindex="-1">流程控制 <a class="header-anchor" href="#流程控制" aria-label="Permalink to &quot;流程控制&quot;">​</a></h2><h3 id="for-in" tabindex="-1">for/in <a class="header-anchor" href="#for-in" aria-label="Permalink to &quot;for/in&quot;">​</a></h3><p>用于遍历对象的所有属性，<code>for/in</code>主要用于遍历对象，不建议用来遍历数组。</p><h3 id="for-of" tabindex="-1">for/of <a class="header-anchor" href="#for-of" aria-label="Permalink to &quot;for/of&quot;">​</a></h3><p>用来遍历 Arrays（数组）, Strings（字符串）, Maps（映射）, Sets（集合）等可迭代的数据结构。</p><p>与 <code>for/in</code> 不同的是 <code>for/of</code> 每次循环取其中的值而不是索引。</p>',9)]))}const _=e(n,[["render",d]]);export{p as __pageData,_ as default};
