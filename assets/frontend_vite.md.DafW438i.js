import{_ as n,c as a,o as l,ah as p}from"./chunks/framework.BrJYEL96.js";const b=JSON.parse('{"title":"vite","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/vite.md","filePath":"frontend/vite.md","lastUpdated":1748679867000}'),o={name:"frontend/vite.md"};function e(t,s,r,c,B,y){return l(),a("div",null,s[0]||(s[0]=[p(`<h1 id="vite" tabindex="-1">vite <a class="header-anchor" href="#vite" aria-label="Permalink to &quot;vite&quot;">​</a></h1><h2 id="简易-vite-热更新脚本" tabindex="-1">简易 Vite 热更新脚本 <a class="header-anchor" href="#简易-vite-热更新脚本" aria-label="Permalink to &quot;简易 Vite 热更新脚本&quot;">​</a></h2><p>简化版的 Vite 热更新(HMR)机制，模拟 Vite 的按需编译和热更新流程。</p><h3 id="核心实现" tabindex="-1">核心实现 <a class="header-anchor" href="#核心实现" aria-label="Permalink to &quot;核心实现&quot;">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// server.js - 开发服务器</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> fs</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;fs&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> path</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;path&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> chokidar</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;chokidar&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 文件监听</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> WebSocket</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;ws&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// WebSocket 服务</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> express</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;express&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> app</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> express</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> port</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 3000</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 1. 创建 WebSocket 服务</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> wss</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#E5C07B;"> WebSocket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">Server</span><span style="color:#ABB2BF;">({ </span><span style="color:#E06C75;">port</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">8080</span><span style="color:#ABB2BF;"> })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 2. 文件监听器</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> watcher</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> chokidar</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">watch</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;./src&#39;</span><span style="color:#ABB2BF;">, {</span></span>
<span class="line"><span style="color:#E06C75;">	ignored</span><span style="color:#ABB2BF;">:</span><span style="color:#E06C75;"> /(</span><span style="color:#C678DD;">^</span><span style="color:#ABB2BF;">|</span><span style="color:#D19A66;">[</span><span style="color:#56B6C2;">\\/\\\\</span><span style="color:#D19A66;">]</span><span style="color:#E06C75;">)</span><span style="color:#56B6C2;">\\.</span><span style="color:#E06C75;">./</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 忽略隐藏文件</span></span>
<span class="line"><span style="color:#E06C75;">	persistent</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 3. 静态文件服务</span></span>
<span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">use</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">express</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">static</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;public&#39;</span><span style="color:#ABB2BF;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 4. 自定义中间件：处理 ESM 请求</span></span>
<span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">use</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;/src&#39;</span><span style="color:#ABB2BF;">, (</span><span style="color:#E06C75;font-style:italic;">req</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">res</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">next</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">	const</span><span style="color:#E5C07B;"> filePath</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">join</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">__dirname</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;src&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">req</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">path</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;filePath: &#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">filePath</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">	if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">fs</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">existsSync</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">filePath</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		// 模拟按需编译（实际 Vite 会在这里做转换）</span></span>
<span class="line"><span style="color:#C678DD;">		const</span><span style="color:#E5C07B;"> content</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> fs</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">readFileSync</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">filePath</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;utf-8&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#E5C07B;">		res</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">type</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;application/javascript&#39;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">send</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">content</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">	} </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#61AFEF;">		next</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 5. 文件变化时的 HMR 逻辑</span></span>
<span class="line"><span style="color:#E5C07B;">watcher</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;change&#39;</span><span style="color:#ABB2BF;">, (</span><span style="color:#E06C75;font-style:italic;">filePath</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">\`File changed: </span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">filePath</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">\`</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 转换为浏览器可识别的模块路径</span></span>
<span class="line"><span style="color:#C678DD;">	const</span><span style="color:#E5C07B;"> modulePath</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> \`/src/</span><span style="color:#C678DD;">\${</span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">relative</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">join</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">__dirname</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;src&#39;</span><span style="color:#ABB2BF;">), </span><span style="color:#E06C75;">filePath</span><span style="color:#ABB2BF;">)</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">\`</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">	// 通过 WebSocket 通知客户端</span></span>
<span class="line"><span style="color:#E5C07B;">	wss</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">clients</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">forEach</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">client</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">		if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">client</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">readyState</span><span style="color:#56B6C2;"> ===</span><span style="color:#E5C07B;"> WebSocket</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">OPEN</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">			client</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">send</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#E5C07B;">				JSON</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">stringify</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">					type</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;update&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">					path</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">modulePath</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">				})</span></span>
<span class="line"><span style="color:#ABB2BF;">			)</span></span>
<span class="line"><span style="color:#ABB2BF;">		}</span></span>
<span class="line"><span style="color:#ABB2BF;">	})</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">listen</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">port</span><span style="color:#ABB2BF;">, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">	console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">\`Dev server running at http://localhost:</span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">port</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">\`</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// client.js - 浏览器端 HMR 逻辑</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> socket</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> WebSocket</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;ws://localhost:8080&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">socket</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">addEventListener</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;message&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">async</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">event</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">	const</span><span style="color:#E5C07B;"> data</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> JSON</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">parse</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">event</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">data</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">	if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">data</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">type</span><span style="color:#56B6C2;"> ===</span><span style="color:#98C379;"> &#39;update&#39;</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">		console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">\`[HMR] Updating module: </span><span style="color:#C678DD;">\${</span><span style="color:#E5C07B;">data</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">path</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">\`</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">		try</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// 使用动态 import 获取新模块</span></span>
<span class="line"><span style="color:#C678DD;">			const</span><span style="color:#E5C07B;"> newModule</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> await</span><span style="color:#61AFEF;"> import</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">\`</span><span style="color:#C678DD;">\${</span><span style="color:#E5C07B;">data</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">path</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">?t=</span><span style="color:#C678DD;">\${</span><span style="color:#E5C07B;">Date</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">now</span><span style="color:#ABB2BF;">()</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">\`</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">			// 这里应该根据实际应用状态更新模块</span></span>
<span class="line"><span style="color:#C678DD;">			if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">window</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">__hmr__</span><span style="color:#56B6C2;"> &amp;&amp;</span><span style="color:#E5C07B;"> window</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">__hmr__</span><span style="color:#ABB2BF;">[</span><span style="color:#E5C07B;">data</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">path</span><span style="color:#ABB2BF;">]) {</span></span>
<span class="line"><span style="color:#E5C07B;">				window</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">__hmr__</span><span style="color:#ABB2BF;">[</span><span style="color:#E5C07B;">data</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">path</span><span style="color:#ABB2BF;">](</span><span style="color:#E06C75;">newModule</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">			}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">			console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">\`[HMR] Updated: </span><span style="color:#C678DD;">\${</span><span style="color:#E5C07B;">data</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">path</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">\`</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">		} </span><span style="color:#C678DD;">catch</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">err</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">			console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">error</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">\`[HMR] Failed to update: </span><span style="color:#C678DD;">\${</span><span style="color:#E5C07B;">data</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">path</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">\`</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">err</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">		}</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 保存模块的更新函数</span></span>
<span class="line"><span style="color:#E5C07B;">window</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">__hmr__</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h3 id="html-示例-src-index-html" tabindex="-1">HTML 示例 (src/index.html) <a class="header-anchor" href="#html-示例-src-index-html" aria-label="Permalink to &quot;HTML 示例 (src/index.html)&quot;">​</a></h3><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;!</span><span style="color:#E06C75;">DOCTYPE</span><span style="color:#D19A66;"> html</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">html</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E06C75;">meta</span><span style="color:#D19A66;"> charset</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;utf-8&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E06C75;">meta</span><span style="color:#D19A66;"> name</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;viewport&quot;</span><span style="color:#D19A66;"> content</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;width=device-width, initial-scale=1.0,  minimal-ui&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E06C75;">meta</span><span style="color:#D19A66;"> name</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;screen-orientation&quot;</span><span style="color:#D19A66;"> content</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;portrait&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;Vite-like HMR Demo&lt;/</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E06C75;">script</span><span style="color:#D19A66;"> type</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;module&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#C678DD;">        import</span><span style="color:#98C379;"> &#39;./client.js&#39;</span><span style="color:#7F848E;font-style:italic;"> // 注入 HMR 客户端</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 示例模块</span></span>
<span class="line"><span style="color:#C678DD;">        import</span><span style="color:#D19A66;"> *</span><span style="color:#C678DD;"> as</span><span style="color:#E06C75;"> counter</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &#39;./src/counter.js&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 注册 HMR 更新函数</span></span>
<span class="line"><span style="color:#E5C07B;">        window</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">__hmr__</span><span style="color:#ABB2BF;">[</span><span style="color:#98C379;">&#39;/src/counter.js&#39;</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">newModule</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">            // 实际应用中这里会更新 UI 状态</span></span>
<span class="line"><span style="color:#E5C07B;">            document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getElementById</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;count&#39;</span><span style="color:#ABB2BF;">).</span><span style="color:#E06C75;">textContent</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> newModule</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">count</span></span>
<span class="line"><span style="color:#E5C07B;">            console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;Counter module updated:&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">newModule</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">        document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getElementById</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;count&#39;</span><span style="color:#ABB2BF;">).</span><span style="color:#E06C75;">textContent</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> counter</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">count</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E06C75;">h1</span><span style="color:#ABB2BF;">&gt;Counter: &lt;</span><span style="color:#E06C75;">span</span><span style="color:#D19A66;"> id</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;count&quot;</span><span style="color:#ABB2BF;">&gt;0&lt;/</span><span style="color:#E06C75;">span</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">h1</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">html</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><h3 id="示例模块-src-counter-js" tabindex="-1">示例模块 (src/counter.js) <a class="header-anchor" href="#示例模块-src-counter-js" aria-label="Permalink to &quot;示例模块 (src/counter.js)&quot;">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> let</span><span style="color:#E06C75;"> count</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 32142323323</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// HMR 支持</span></span>
<span class="line"><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">meta</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">hot</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">	import</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">meta</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">hot</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">accept</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">newModule</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">		// 在真实 Vite 中会处理状态保留</span></span>
<span class="line"><span style="color:#E5C07B;">		console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;Counter module hot updated&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">	})</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="工作原理说明" tabindex="-1">工作原理说明 <a class="header-anchor" href="#工作原理说明" aria-label="Permalink to &quot;工作原理说明&quot;">​</a></h3><ol><li><strong>开发服务器</strong>： <ul><li>启动 Express 静态服务器</li><li>监听文件变化 (使用 chokidar)</li><li>提供 WebSocket 服务用于 HMR 通信</li></ul></li><li><strong>HMR 流程</strong>： <ul><li>当文件修改时，服务器通过 WebSocket 通知客户端</li><li>客户端收到通知后，使用动态 <code>import()</code> 重新加载模块</li><li>调用预先注册的更新函数应用变更</li></ul></li><li><strong>与真实 Vite 的区别</strong>： <ul><li>没有实现真正的按需编译 (如 JSX/TS 转换)</li><li>缺少依赖图分析和更智能的更新策略</li><li>没有实现状态保留等高级功能</li></ul></li></ol><h3 id="如何使用" tabindex="-1">如何使用 <a class="header-anchor" href="#如何使用" aria-label="Permalink to &quot;如何使用&quot;">​</a></h3><p>安装依赖：</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> install</span><span style="color:#98C379;"> express</span><span style="color:#98C379;"> ws</span><span style="color:#98C379;"> chokidar</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>项目结构：</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">your-project/</span></span>
<span class="line"><span style="color:#61AFEF;">├──</span><span style="color:#98C379;"> public/</span></span>
<span class="line"><span style="color:#61AFEF;">│</span><span style="color:#98C379;">   ├──</span><span style="color:#98C379;"> index.html</span></span>
<span class="line"><span style="color:#61AFEF;">│</span><span style="color:#98C379;">   └──</span><span style="color:#98C379;"> client.js</span></span>
<span class="line"><span style="color:#61AFEF;">├──</span><span style="color:#98C379;"> src/</span></span>
<span class="line"><span style="color:#61AFEF;">│</span><span style="color:#98C379;">   └──</span><span style="color:#98C379;"> counter.js</span></span>
<span class="line"><span style="color:#61AFEF;">└──</span><span style="color:#98C379;"> server.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>启动开发服务器：</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">node</span><span style="color:#98C379;"> server.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="treeshaking按需加载" tabindex="-1">TreeShaking按需加载 <a class="header-anchor" href="#treeshaking按需加载" aria-label="Permalink to &quot;TreeShaking按需加载&quot;">​</a></h2><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#98C379;"> install</span><span style="color:#D19A66;"> -D</span><span style="color:#98C379;"> unplugin-vue-components</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> Components</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &#39;unplugin-vue-components/vite&#39;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> {</span><span style="color:#E06C75;">VantResolver</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">ElementPlusResolver</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">VueUseComponentsResolver</span><span style="color:#ABB2BF;">} </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;unplugin-vue-components/resolvers&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> default</span><span style="color:#61AFEF;"> defineConfig</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">  plugins</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#61AFEF;">    vue</span><span style="color:#ABB2BF;">(),</span></span>
<span class="line"><span style="color:#61AFEF;">    vueJsx</span><span style="color:#ABB2BF;">(),</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // vueDevTools(),</span></span>
<span class="line"><span style="color:#61AFEF;">    Components</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">      resolvers</span><span style="color:#ABB2BF;">: [</span><span style="color:#61AFEF;">VantResolver</span><span style="color:#ABB2BF;">(),</span><span style="color:#61AFEF;">ElementPlusResolver</span><span style="color:#ABB2BF;">()],</span></span>
<span class="line"><span style="color:#ABB2BF;">    }),</span></span>
<span class="line"><span style="color:#ABB2BF;">  ],</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>运行后，会自动生成<code>components.d.ts</code></p>`,23)]))}const F=n(o,[["render",e]]);export{b as __pageData,F as default};
