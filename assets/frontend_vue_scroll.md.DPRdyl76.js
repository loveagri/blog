import{_ as n,c as l,o as a,ah as e}from"./chunks/framework.BrJYEL96.js";const F=JSON.parse('{"title":"vue3中监听滚动条事件","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/vue/scroll.md","filePath":"frontend/vue/scroll.md","lastUpdated":1717048906000}'),o={name:"frontend/vue/scroll.md"};function p(r,s,t,c,i,u){return a(),l("div",null,s[0]||(s[0]=[e(`<h1 id="vue3中监听滚动条事件" tabindex="-1">vue3中监听滚动条事件 <a class="header-anchor" href="#vue3中监听滚动条事件" aria-label="Permalink to &quot;vue3中监听滚动条事件&quot;">​</a></h1><div class="language-vue line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">import { onMounted, onUnmounted, reactive } from &#39;vue&#39; const data=reactive({</span></span>
<span class="line"><span style="color:#ABB2BF;">oldScrollTop:0, }); const scrolling=()=&gt;{ // 滚动条距文档顶部的距离 let</span></span>
<span class="line"><span style="color:#ABB2BF;">scrollTop =window.pageYOffset ||document.documentElement.scrollTop</span></span>
<span class="line"><span style="color:#ABB2BF;">||document.body.scrollTop; // 滚动条滚动的距离 let scrollStep = scrollTop -</span></span>
<span class="line"><span style="color:#ABB2BF;">data.oldScrollTop; console.log(&quot;header 滚动距离 &quot;, scrollTop); //</span></span>
<span class="line"><span style="color:#ABB2BF;">更新——滚动前，滚动条距文档顶部的距离 data.oldScrollTop = scrollTop;</span></span>
<span class="line"><span style="color:#ABB2BF;">//变量windowHeight是可视区的高度 let windowHeight =</span></span>
<span class="line"><span style="color:#ABB2BF;">document.documentElement.clientHeight || document.body.clientHeight;</span></span>
<span class="line"><span style="color:#ABB2BF;">//变量scrollHeight是滚动条的总高度 let scrollHeight =</span></span>
<span class="line"><span style="color:#ABB2BF;">document.documentElement.scrollHeight || document.body.scrollHeight;</span></span>
<span class="line"><span style="color:#ABB2BF;">//滚动条到底部的条件 if (scrollTop + windowHeight == scrollHeight) {</span></span>
<span class="line"><span style="color:#ABB2BF;">//你想做的事情 console.log(&quot;header 你已经到底部了&quot;); } if (scrollStep &lt; </span><span style="color:#E06C75;">0</span><span style="color:#D19A66;">)</span><span style="color:#D19A66;"> {</span></span>
<span class="line"><span style="color:#D19A66;">console.log(</span><span style="color:#FFFFFF;">&quot;header</span><span style="color:#D19A66;"> 滚动条向上滚动了！</span><span style="color:#FFFFFF;">&quot;);</span><span style="color:#D19A66;"> }</span><span style="color:#D19A66;"> else</span><span style="color:#D19A66;"> {</span><span style="color:#D19A66;"> console.log(</span><span style="color:#FFFFFF;">&quot;header</span></span>
<span class="line"><span style="color:#D19A66;">滚动条向下滚动了！</span><span style="color:#FFFFFF;">&quot;);</span><span style="color:#D19A66;"> }</span><span style="color:#FFFFFF;"> //</span><span style="color:#D19A66;"> 判断是否到了最顶部</span><span style="color:#D19A66;"> if</span><span style="color:#D19A66;"> (scrollTop</span><span style="color:#FFFFFF;"> &lt;=</span><span style="color:#D19A66;"> 0)</span><span style="color:#D19A66;"> {</span></span>
<span class="line"><span style="color:#D19A66;">console.log(</span><span style="color:#FFFFFF;">&quot;header</span><span style="color:#D19A66;"> 到了最顶部</span><span style="color:#FFFFFF;">&quot;)</span><span style="color:#D19A66;"> };</span><span style="color:#D19A66;"> };</span><span style="color:#D19A66;"> onMounted(()</span><span style="color:#ABB2BF;">=&gt;{</span></span>
<span class="line"><span style="color:#ABB2BF;">window.addEventListener(&quot;scroll&quot;, scrolling); }) onUnmounted(()=&gt;{</span></span>
<span class="line"><span style="color:#ABB2BF;">window.removeEventListener(&quot;scroll&quot;, scrolling); })</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div>`,2)]))}const y=n(o,[["render",p]]);export{F as __pageData,y as default};
