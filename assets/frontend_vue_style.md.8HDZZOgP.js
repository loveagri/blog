import{_ as n,c as a,o as e,ah as l}from"./chunks/framework.BrJYEL96.js";const d=JSON.parse('{"title":"样式相关问题","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/vue/style.md","filePath":"frontend/vue/style.md","lastUpdated":1717048906000}'),p={name:"frontend/vue/style.md"};function o(r,s,t,c,i,B){return e(),a("div",null,s[0]||(s[0]=[l(`<h1 id="样式相关问题" tabindex="-1">样式相关问题 <a class="header-anchor" href="#样式相关问题" aria-label="Permalink to &quot;样式相关问题&quot;">​</a></h1><ol><li><h3 id="css-vue-js-使样式被子组件继承" tabindex="-1">css - Vue js - 使样式被子组件继承 <a class="header-anchor" href="#css-vue-js-使样式被子组件继承" aria-label="Permalink to &quot;css - Vue js - 使样式被子组件继承&quot;">​</a></h3></li></ol><p>当我想为当前组件设置一个私有(private)样式时，我将它定义在一个标签中。 为了使样式对子组件可见，我使用了深度选择器让它通过，如下所示:</p><div class="language-vue line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">style</span><span style="color:#D19A66;"> scoped</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#C678DD;">::</span><span style="color:#E06C75;">v-deep</span><span style="color:#D19A66;"> .b</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">    ...</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">style</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">style</span><span style="color:#D19A66;"> scoped</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#C678DD;">:deep(</span><span style="color:#D19A66;">.b</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">    ...</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">style</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">//或者去掉scoped</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div>`,4)]))}const u=n(p,[["render",o]]);export{d as __pageData,u as default};
