import{_ as n,c as a,o as l,ah as e}from"./chunks/framework.BrJYEL96.js";const y=JSON.parse('{"title":"移动端适配","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/移动端适配.md","filePath":"frontend/移动端适配.md","lastUpdated":1751723043000}'),p={name:"frontend/移动端适配.md"};function o(t,s,r,c,i,d){return l(),a("div",null,s[0]||(s[0]=[e(`<h1 id="移动端适配" tabindex="-1">移动端适配 <a class="header-anchor" href="#移动端适配" aria-label="Permalink to &quot;移动端适配&quot;">​</a></h1><table tabindex="0"><thead><tr><th>web</th><th>des</th></tr></thead><tbody><tr><td><a href="https://lanhuapp.com/dashboard/#/item" target="_blank" rel="noreferrer">蓝湖</a></td><td>在线转换</td></tr><tr><td>PxCook</td><td></td></tr><tr><td>imgcook</td><td></td></tr></tbody></table><h3 id="插件转换" tabindex="-1">插件转换 <a class="header-anchor" href="#插件转换" aria-label="Permalink to &quot;插件转换&quot;">​</a></h3><p><a href="https://postcss.org/" target="_blank" rel="noreferrer">postcss-pxtorem</a>：px转换为rem</p><p>autoprefixer：自动管理css属性的浏览器前缀</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#D19A66;"> -i</span><span style="color:#D19A66;"> -D</span><span style="color:#98C379;"> postcss</span><span style="color:#98C379;">  autoprefixer</span><span style="color:#98C379;"> postcss-pxtorem</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>创建<code>postcss.config.js</code></p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">exports</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">  plugins</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">    autoprefixer</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">      overrideBrowserslist</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&#39;Android &gt;= 4.0&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;iOS &gt;= 7&#39;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#98C379;">    &#39;postcss-pxtorem&#39;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      // 根节点的 fontSize 值</span></span>
<span class="line"><span style="color:#E06C75;">      rootValue</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">16</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">      propList</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&#39;*&#39;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#E06C75;">      selectorBlackList</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&#39;:root&#39;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#ABB2BF;">  },</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>获取用户屏幕宽度并设置HTML的fontsize</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> rootValue</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 16</span><span style="color:#7F848E;font-style:italic;">       // 设计稿的基准字体大小（通常是16px）</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> rootWidth</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 390</span><span style="color:#7F848E;font-style:italic;">      // 设计稿的基准宽度（这里是390px，可能是移动端设计稿宽度）</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> deviceWidth</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> document</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">documentElement</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">clientWidth</span><span style="color:#7F848E;font-style:italic;">  // 获取设备实际宽度</span></span>
<span class="line"><span style="color:#E5C07B;">document</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">documentElement</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">style</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">fontSize</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">deviceWidth</span><span style="color:#56B6C2;"> *</span><span style="color:#E06C75;"> rootValue</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">/</span><span style="color:#E06C75;"> rootWidth</span><span style="color:#56B6C2;"> +</span><span style="color:#98C379;"> &#39;px&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="工作原理" tabindex="-1">工作原理 <a class="header-anchor" href="#工作原理" aria-label="Permalink to &quot;工作原理&quot;">​</a></h4><ol><li><strong>rem单位</strong>：rem(root em)是相对于根元素(html)字体大小的单位。如果根字体大小是16px，那么1rem = 16px。</li><li><strong>响应式原理</strong>： <ul><li>设计稿宽度为390px时，根字体大小设置为16px</li><li>当设备宽度变化时，按比例调整根字体大小</li><li>公式：<code>当前根字体大小 = (设备宽度 × 设计稿根字体大小) / 设计稿宽度</code></li></ul></li><li><strong>实际应用</strong>： <ul><li>在设计稿上测量一个元素宽度为195px（设计稿宽度的一半）</li><li>转换为rem：195px / 16px = 12.1875rem</li><li>在任何设备上，这个12.1875rem都会保持为当前视口宽度的一半</li></ul></li></ol>`,12)]))}const b=n(p,[["render",o]]);export{y as __pageData,b as default};
