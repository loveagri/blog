import{_ as s,c as e,o as l,ah as n}from"./chunks/framework.BrJYEL96.js";const u=JSON.parse('{"title":"laravel模型提示及Debugbar使用","description":"","frontmatter":{},"headers":[],"relativePath":"tools/JetBrains/phpstorm/laravel-model-tool-and-debugbar.md","filePath":"tools/JetBrains/phpstorm/laravel-model-tool-and-debugbar.md","lastUpdated":1734879075000}'),r={name:"tools/JetBrains/phpstorm/laravel-model-tool-and-debugbar.md"};function p(o,a,t,c,i,d){return l(),e("div",null,a[0]||(a[0]=[n(`<h1 id="laravel模型提示及debugbar使用" tabindex="-1">laravel模型提示及Debugbar使用 <a class="header-anchor" href="#laravel模型提示及debugbar使用" aria-label="Permalink to &quot;laravel模型提示及Debugbar使用&quot;">​</a></h1><hr><h3 id="生成模型提示" tabindex="-1">生成模型提示 <a class="header-anchor" href="#生成模型提示" aria-label="Permalink to &quot;生成模型提示&quot;">​</a></h3><hr><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># composer 安装</span></span>
<span class="line"><span style="color:#61AFEF;">composer</span><span style="color:#98C379;"> require</span><span style="color:#98C379;"> barryvdh/laravel-ide-helper</span><span style="color:#D19A66;"> --dev</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 生成模型的工具：</span></span>
<span class="line"><span style="color:#61AFEF;">php</span><span style="color:#98C379;"> artisan</span><span style="color:#98C379;"> ide-helper:models</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 生成_ide_helper.php文件 外观方法的代码提示：</span></span>
<span class="line"><span style="color:#61AFEF;">php</span><span style="color:#98C379;"> artisan</span><span style="color:#98C379;"> ide-helper:generate</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 通过容器调用的类的代码提示：</span></span>
<span class="line"><span style="color:#61AFEF;">php</span><span style="color:#98C379;"> artisan</span><span style="color:#98C379;"> ide-helper:meta</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="laravel框架开发调试工具laravel-debugbar使用" tabindex="-1">Laravel框架开发调试工具Laravel Debugbar使用 <a class="header-anchor" href="#laravel框架开发调试工具laravel-debugbar使用" aria-label="Permalink to &quot;Laravel框架开发调试工具Laravel Debugbar使用&quot;">​</a></h3><hr><p><a href="https://www.dandelioncloud.cn/article/details/1531824649600266241" target="_blank" rel="noreferrer">原文链接</a></p><ol><li>使用 Composer 安装该扩展包：</li></ol><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">composer</span><span style="color:#98C379;"> require</span><span style="color:#98C379;"> barryvdh/laravel-debugbar</span><span style="color:#D19A66;"> --dev</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="2"><li><p>安装完成后，修改 <code>config/app.php</code> 在 <code>providers</code> 数组内追加 Debugbar 的 Provider</p></li><li><p>关闭debugbar需要去.env里把<code>APP_DEBUG</code>设置为<code>false</code></p></li></ol>`,11)]))}const h=s(r,[["render",p]]);export{u as __pageData,h as default};
